#!/usr/bin/env python
from __future__ import print_function

import collections
import sqlite3
import sys
import textwrap

import nldb

def main():
    database = nldb.NlDatabase(auto_commit=True)

    with database as cursor:
        entries = list(cursor.execute(textwrap.dedent('''\
            SELECT youtube_id, plaintext
            FROM videos_caption
            WHERE has_caption
            AND word_rank_processed is null
        ''')))
        progress_total = len(entries)
        progress_i = 0

        for youtube_id, plaintext in entries:
            progress_i += 1

            words = plaintext\
                .replace(',', '') \
                .replace('.', '') \
                .split()
            words.sort()
            words_count = collections.defaultdict(int)
            for word in words:
                words_count[word] += 1

            for word, count in words_count.iteritems():
                update = textwrap.dedent('''\
                    UPDATE word_rank
                    SET occurances = occurances + ?
                    WHERE word=?
                ''')
                cur = cursor.execute(update, (count, word))
                if 0 == cur.rowcount:
                    cursor.execute(
                        textwrap.dedent('''\
                            INSERT INTO word_rank
                            (word, occurances)
                            VALUES(?, 0)
                        '''),
                        [word]
                    )
                    cur = cursor.execute(update, (count, word))
                cur = cursor.execute(update, (count, word))
                assert(cur.rowcount > 0)

            cursor.execute(
                textwrap.dedent('''\
                    UPDATE videos_caption
                    SET word_rank_processed = 1
                    WHERE youtube_id = ?
                '''),
                [youtube_id]
            )
            cursor.connection.commit()
            sys.stdout.write(
                '\r {} / {} ({:.2f} %)'.format(
                    progress_i,
                    progress_total,
                    float(progress_i) / progress_total * 100,
                )
            )
            sys.stdout.flush()

if __name__ == '__main__':
    main()
